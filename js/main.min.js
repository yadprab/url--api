const urlShortenerFn = () => {
  const e = document.querySelector("form"),
    t = document.querySelector("#nav--icon"),
    n = document.querySelector(".shortened--links"),
    s = () => {
      const e = JSON.parse(localStorage.getItem("links"));
      if (null === e) return;
      {
        const t = e
          .map(
            (e) =>
              `\n             <li>\n            <section class="links">\n                <a href="${e.destination}" class="unshorten"  aria-label="original link">${e.destination}</a>\n                 <input type="text"  value="${e.shortUrl}" class = 'shortened'  readonly aria-label="shortened link ">\n                <button id="copy" class="copy" aria-label="click here to copy link ">copy</button>\n    \n            </section>\n        </li>\n            \n            \n            \n            \n            \n            `
          )
          .join("");
        n.innerHTML = t;
      }
      const t = document.querySelectorAll(".copy"),
        s = (e) => {
          e.preventDefault();
          const t = e.target;
          t.parentElement.querySelector("input").select(),
            document.execCommand("copy"),
            t.classList.add("copied"),
            (t.innerHTML = "copied");
        };
      t.forEach((e) => e.addEventListener("click", s));
    },
    o = (t, n) => {
      const s = e.querySelector("small");
      t.classList.add("error"), (s.textContent = n);
    },
    l = (t) => {
      const n = e.querySelector("small");
      t.classList.remove("error"), (n.textContent = "");
    },
    r = () => {
      if ("" == n.innerHTML.trim()) (n.innerHTML = i()), a();
      else {
        n
          .querySelectorAll("li")
          .forEach((e) => e.insertAdjacentHTML("beforebegin", i())),
          a();
      }
    },
    i = () =>
      ' <li class="loader hide" tabindex="-1">\n     <div class="box"></div>\n     <div class="box"></div>\n     <div class="box"></div>\n     <div class="box"></div>\n   \n </li>\n     \n     \n     \n     \n     ',
    a = () => {
      const e = document.querySelector(".loader");
      e.classList.remove("hide"),
        setTimeout(() => {
          e.classList.add("hide");
        }, 2e3);
    };
  s(),
    e.addEventListener("submit", (t) => {
      t.preventDefault();
      const n = e.querySelector("[type=url]"),
        i = n.value,
        a = new RegExp(/^(ftp|http|https):\/\/[^ "]+$/),
        c = { destination: "", domain: { fullName: "rebrand.ly" } };
      "" == i.trim()
        ? o(n, "enter the url")
        : a.test(i)
        ? (l(n),
          (c.destination = i),
          r(),
          e.reset(),
          fetch("https://api.rebrandly.com/v1/links", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
              apiKey: "366ef75cbf80471ba0c2d783d15145b9",
            },
            body: JSON.stringify(c),
          })
            .then((e) => e.json())
            .then((e) => {
              (c.destination = e.destination), (c.shortUrl = e.shortUrl);
              const t = [];
              if (null == localStorage.getItem("links"))
                t.push(c), localStorage.setItem("links", JSON.stringify(t));
              else {
                const e = JSON.parse(localStorage.getItem("links"));
                e.push(c), localStorage.setItem("links", JSON.stringify(e));
              }
              s();
            }))
        : o(n, "enter the valid url");
    }),
    t.addEventListener("click", (e) => {
      e.preventDefault();
      const t = document.querySelector(".mobile--nav");
      t.classList.remove("hide"), t.classList.add("nav--in");
      document
        .querySelector("#close--button")
        .addEventListener("click", (e) => {
          e.preventDefault(),
            t.classList.add("hide"),
            t.classList.remove("nav--in");
        });
    });
};
window.addEventListener("DOMContentLoaded", urlShortenerFn);
